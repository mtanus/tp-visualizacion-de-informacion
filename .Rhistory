# Liberar memoria ####
rm(list = ls())
# Cargar librerías ####
library(dplyr)
library(sf)
library(tidyr)
library(ggplot2)
# Lectura de bases ####
dbEspeciesAm <- read.csv("../SYB66_313_202310_Threatened Species-EDITADO.csv", sep = ",")
# Lectura de bases ####
dbEspeciesAm <- read.csv("bases/SYB66_313_202310_Threatened Species-EDITADO.csv", sep = ",")
str(dbEspeciesAm)
names(dbEspeciesAm) <- c("ISO_Country", "Country", "Year", "Series", "Value", "Footnotes", "Source" )
dbEspeciesAm <- dbEspeciesAm %>% select(ISO_Country:Value)
unique(dbEspeciesAm$Country)
unique(dbEspeciesAm$Series)
dbEspeciesAm <- dbEspeciesAm %>%
mutate(
Series = case_when(
Series ==  "Threatened Species: Vertebrates (number)" ~ "Vertebrados",
Series ==  "Threatened Species: Invertebrates (number)" ~ "Invertebrados",
Series ==  "Threatened Species: Plants (number)" ~ "Plantas",
Series ==  "Threatened Species: Total (number)" ~ "Total"))
dbCodigoPaisesBM <- read.csv("../bases-anexas/codigo-paises-BM.csv", sep = ",")
dbCodigoPaisesBM <- read.csv("bases/bases-anexas/codigo-paises-BM.csv", sep = ",")
str(dbCodigoPaisesBM)
unique(dbCodigoPaisesBM$Country.Name)
dbDatosPaisesBM <- read.csv("../bases-anexas/P_Data_Extract_From_World_Development_Indicators.csv", sep = ";")
dbDatosPaisesBM <- read.csv("bases/bases-anexas/P_Data_Extract_From_World_Development_Indicators.csv", sep = ";")
str(dbDatosPaisesBM)
unique(dbDatosPaisesBM$Country.Name)
grep('ant', tolower(dbDatosPaisesBM$Country.Name), value = TRUE)
# Quito la , como separador decimal
grep(',', dbDatosPaisesBM$YR2020, value = TRUE)
dbDatosPaisesBM$YR2020 <- chartr(',', '.', dbDatosPaisesBM$YR2020)
dbDatosPaisesBM$YR2020 <- as.numeric(dbDatosPaisesBM$YR2020)
sfPaises <- read_sf("../bases-anexas/ne_50m_admin_0_countries/ne_50m_admin_0_countries.shp")
sfPaises <- read_sf("bases/bases-anexas/ne_50m_admin_0_countries/ne_50m_admin_0_countries.shp")
str(sfPaises)
plot(st_geometry(sfPaises))
grep("ant", tolower(sfPaises$NAME), value = TRUE)
sfPaises[sfPaises$NAME == "Antartica"]
sfPaises[sfPaises$NAME == "Antarctica"]
sfPaises[grepl("antarctica", tolower(sfPaises$NAME))]
sfPaises[grepl("antarctica", tolower(sfPaises$NAME)), ]
sfPaises[grepl("antarctica", tolower(sfPaises$NAME))] %>% View()
colnames(sfPaises)
str(sfPaises)
# Filtro los datasets ####
# Me quedo con los países que puedo unir por su código
dbDatosPaisesBM <- dbDatosPaisesBM %>%
filter(Country.Code %in% dbCodigoPaisesBM$Country.Code) %>%
# select(Country.Name, Country.Code, Series.Name, X2020) %>%
select(Country.Name, Country.Code, Series.Name, YR2020) %>%
mutate(indicador = case_when(
Series.Name == "Population, total" ~ "Poblacion",
Series.Name == "Surface area (sq. km)" ~ "Superficie_km2",
Series.Name == "Population density (people per sq. km of land area)" ~ "Densidad_poblacional"))
unique(dbDatosPaisesBM$indicador)
dbDatosPaisesBM <- dbDatosPaisesBM %>%
distinct() %>%
select(-Series.Name) %>%
pivot_wider(names_from = indicador, values_from = YR2020)
# Acondiciono los datasets ####
# Uno datasets para tener el código numérico de país
dbDatosPaisesBM <- dbDatosPaisesBM %>%
full_join(dbCodigoPaisesBM %>% select(Country.Name, Country.Code, Region.Name, M49.Code))
# Uno datasets para tener las especies amenazadas con datos de cada país
dbEspeciesAmDatosPaises <- dbEspeciesAm %>%
left_join(dbDatosPaisesBM, by = c("ISO_Country" = "M49.Code"))
table(dbEspeciesAmDatosPaises$Series)
dbEspeciesAmDatosPaises <- dbEspeciesAmDatosPaises %>%
filter(!is.na(Poblacion)) %>%
filter(!grepl("Total", Series))
# Creo bases con datos resumen ####
# Creo una base con población y superficie de países
pobYSupPaises <- dbEspeciesAmDatosPaises %>%
select(Region.Name, Country, Poblacion, Superficie_km2) %>%
distinct()
# Creo una base con población y superficie de países
pobYSupContinentes <- pobYSupPaises %>%
group_by(Region.Name) %>%
summarise(
Poblacion = sum(Poblacion),
Superficie_km2 = sum(Superficie_km2))
# Creo una base con resumen mundial
table(dbEspeciesAmDatosPaises$Series)
dbEspeciesAmMundo <- dbEspeciesAmDatosPaises %>%
# filter(!grepl("Total", Series)) %>%
group_by(Year, Series) %>%
summarise(
Value = sum(Value)) %>%
mutate(
Poblacion = sum(pobYSupPaises$Poblacion),
Superficie_km2 = sum(pobYSupPaises$Superficie_km2))
# Creo una base con resumen según continente
dbEspeciesAmContinentes <- dbEspeciesAmDatosPaises %>%
# filter(!grepl("Total", Series)) %>%
group_by(Year, Series, Region.Name) %>%
summarise(
Value = sum(Value)) %>%
ungroup() %>%
full_join(pobYSupContinentes, by = c("Region.Name" = "Region.Name"))
# Gráficas ####
ampSuperficie <- 10^5
pobYSupPaises %>%
filter(grepl('argent', tolower(Country)))
pobYSupPaises %>%
arrange(Superficie_km2) %>%
filter((Superficie_km2 > (ampSuperficie * 0.95)) & (Superficie_km2 < (ampSuperficie * 1.05)))
# Especies amenazadas por superficie de continente según tiempo ####
unique(dbEspeciesAmContinentes$Series)
unique(dbEspeciesAmContinentes$Region.Name)
dbgraf_EspeciesAmContinentes <- dbEspeciesAmContinentes %>%
group_by(Year, Region.Name) %>%
summarise(
cantidad = sum(Value)) %>%
full_join(pobYSupContinentes, by = c("Region.Name" = "Region.Name")) %>%
mutate(
especie_km2 = ampSuperficie * cantidad / Superficie_km2)
# Quito la notación científica
options(scipen = 999)
unique(dbgraf_EspeciesAmContinentes$Year)
dbgraf_EspeciesAmContinentes %>%
ggplot() +
geom_line(aes(x = Year, y = especie_km2, colour = Region.Name)) +
geom_text(data = dbgraf_EspeciesAmContinentes %>%
filter(Year == max(unique(dbgraf_EspeciesAmContinentes$Year))),
aes(x = Year, y = especie_km2,
colour = Region.Name, label = Region.Name),
hjust = 0.25, vjust = -0.25) +
scale_colour_manual(
values = c("Africa" = "#6ADB88",
"Americas" = "#DB9352",
"Asia" = "#DB5DA6",
"Europe" = "#BD18D9",
"Oceania" = "#315B96")) +
scale_x_continuous(
limits = c(2004, 2022),
breaks = c(2004, 2010, 2015, 2020)) +
theme_light() +
theme(
legend.position = "none",
# panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()
# panel.background = element_blank(),
# axis.line = element_line(colour = "black")
) +
labs(title = paste0("Evolución temporal de especies amenazadas según continente"),
# caption = "Fuente:",
y = paste0("Especies amenazadas / ", as.character(ampSuperficie), " km^2"),
x = "Año"
)
